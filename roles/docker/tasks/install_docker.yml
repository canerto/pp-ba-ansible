---
#- hosts: all
  - include_vars: ../vars/main.yml
#  vars_files:
#  - ../vars/main.yml
#  become: yes
#  tasks:
  - name: Ensure old versions of Docker are not installed
    apt:
      name:
        - docker
        - docker-common
        - docker-engine
      state: absent

  - name: Ensure dependencies are installed
    apt:
      name: 
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      state: present

  - name: Add Docker's official GPG key
    apt_key: 
      url: https://download.docker.com/linux/ubuntu/gpg
      id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      state: present

  - name: Verify the fingerprint
    shell: apt-key fingerprint 0EBFCD88
    register: fingerprint

  - debug: var=fingerprint

  - name: Add Docker repository
    apt_repository:
      repo: "{{ docker_apt_repository }}"
      state: present

  - name: Install Docker
    apt:
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      state: present
      update_cache: yes
    notify: restart docker

  - name: Ensure Docker is started and enabled at boot
    service:
      name: docker
      state: started
      enabled: yes

  - name: Verify that Docker Engine is installed correctly by running hello-world image
    shell: docker run hello-world
    register: hello

  - debug: var=hello

  - name: Manage Docker as a non-root user, so ensure docker users are added to the docker group
    user:                                       
      name: "{{ item }}"
      group: docker 
      append: yes
    with_items: "{{ docker_users }}"
    when: docker_users | length > 0

  - name: Install Docker Module for Python
    pip:
      name: docker
      #executable: pip3
      state: latest

  - name: Reboot the machine
    reboot:
